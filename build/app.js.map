{"version":3,"sources":["webpack://fortjs-swagger/webpack/bootstrap","webpack://fortjs-swagger/./src/decorators/body.ts","webpack://fortjs-swagger/./src/decorators/ignore_property.ts","webpack://fortjs-swagger/./src/decorators/index.ts","webpack://fortjs-swagger/./src/decorators/query.ts","webpack://fortjs-swagger/./src/decorators/response.ts","webpack://fortjs-swagger/./src/decorators/swagger_model.ts","webpack://fortjs-swagger/./src/enums/data_type.ts","webpack://fortjs-swagger/./src/enums/index.ts","webpack://fortjs-swagger/./src/global.ts","webpack://fortjs-swagger/./src/handlers/swagger_handler.ts","webpack://fortjs-swagger/./src/index.ts","webpack://fortjs-swagger/./src/models/index.ts","webpack://fortjs-swagger/./src/models/swagger.ts","webpack://fortjs-swagger/external \"fortjs\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { SwaggerHandler } from \"../handlers/swagger_handler\";\r\nimport { DATA_TYPE } from \"../enums/data_type\";\r\n\r\nexport const Body = (variableName: string, type: DATA_TYPE): MethodDecorator => {\r\n    return (target: any, methodName: string, descriptor: PropertyDescriptor) => {\r\n        const className = (target.constructor.name as string);\r\n        SwaggerHandler.saveQuery(className, methodName, {\r\n            type: type,\r\n            variableName: variableName\r\n        })\r\n    };\r\n}","import { SwaggerHandler } from \"../handlers/swagger_handler\";\r\n\r\nexport const IgnoreProperty = (target: any, propertyName: string, descriptor: PropertyDescriptor) => {\r\n    const className = (target.constructor.name as string);\r\n    SwaggerHandler.addIgnoreProperty(className, propertyName);\r\n};","export * from './body';\r\nexport * from './ignore_property';\r\nexport * from './query';\r\nexport * from './response';\r\nexport * from './swagger_model';","import { SwaggerHandler } from \"../handlers/swagger_handler\";\r\nimport { DATA_TYPE } from \"../enums/data_type\";\r\n\r\nexport const Query = (variableName: string, type: DATA_TYPE): MethodDecorator => {\r\n    return (target: any, methodName: string, descriptor: PropertyDescriptor) => {\r\n        const className = (target.constructor.name as string);\r\n        SwaggerHandler.saveQuery(className, methodName, {\r\n            type: type,\r\n            variableName: variableName\r\n        })\r\n    };\r\n}","import { HTTP_STATUS_CODE } from \"fortjs\";\r\nimport { SwaggerHandler } from \"../handlers/swagger_handler\";\r\n\r\nexport const Response = (statusCode: HTTP_STATUS_CODE, value: any): MethodDecorator => {\r\n    return (target: any, methodName: string, descriptor: PropertyDescriptor) => {\r\n        const className = (target.constructor.name as string);\r\n        SwaggerHandler.saveResponse(className, value, {\r\n            statusCode: statusCode,\r\n            value: value\r\n        })\r\n    };\r\n}","import { SwaggerHandler } from \"../handlers/swagger_handler\";\r\n\r\n// export const responseModel = (): ClassDecorator => {\r\n//     return (target: any) => {\r\n//         const className = target.name;\r\n//         SwaggerHandler.saveModel({\r\n//             classInstance: new target(),\r\n//             className: className,\r\n//             ignoredProperty: []\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const SwaggerModel = (target: any) => {\r\n    const className = target.name;\r\n    SwaggerHandler.saveModel({\r\n        classInstance: new target(),\r\n        className: className,\r\n        ignoredProperty: []\r\n    })\r\n}","export enum DATA_TYPE {\r\n    String = \"string\",\r\n    Number = \"number\"\r\n}","export * from './data_type';","import { RouteInfo } from \"fortjs\";\r\n\r\nexport class Global {\r\n    static routes: RouteInfo[] = [];\r\n}","import { SwaggerInfo } from \"../types/swagger_route_info\";\r\nimport { ResponseInfo } from \"../types/response_info\";\r\nimport { QueryInfo } from \"../types/query_info\";\r\nimport { WorkerInfo } from \"../types/worker_info\";\r\nimport { BodyInfo } from \"../types/body_info\";\r\nimport { SwaggerModelInfo } from \"../types/swagger_model_info\";\r\n\r\nconst swaggerRoutes: SwaggerInfo[] = [];\r\nconst swaggerModels: SwaggerModelInfo[] = [];\r\n\r\nconst getNewWorker = (methodName: string) => {\r\n    return {\r\n        body: {},\r\n        file: {},\r\n        methodName: methodName,\r\n        query: {},\r\n        response: {}\r\n    } as WorkerInfo\r\n}\r\nexport class SwaggerHandler {\r\n    static saveResponse(className: string, methodName: string, response: ResponseInfo) {\r\n        const value = swaggerRoutes.find(qry => qry.className === className)\r\n        if (value == null) {\r\n            const worker = getNewWorker(methodName);\r\n            worker.response = response;\r\n            swaggerRoutes.push({\r\n                className: className,\r\n                workers: [worker]\r\n            })\r\n        }\r\n        else {\r\n            const savedWorker = value.workers.find(qry => qry.methodName === methodName);\r\n            if (savedWorker != null) {\r\n                savedWorker.response[response.statusCode] = response.value;\r\n            }\r\n        }\r\n    }\r\n\r\n    static saveQuery(className: string, methodName: string, query: QueryInfo) {\r\n        const value = swaggerRoutes.find(qry => qry.className === className)\r\n        if (value == null) {\r\n            const worker = getNewWorker(methodName);\r\n            worker.query = query;\r\n            swaggerRoutes.push({\r\n                className: className,\r\n                workers: [worker]\r\n            })\r\n        }\r\n        else {\r\n            const savedWorker = value.workers.find(qry => qry.methodName === methodName);\r\n            if (savedWorker != null) {\r\n                savedWorker.query[query.variableName] = query.type;\r\n            }\r\n        }\r\n    }\r\n\r\n    static saveBody(className: string, methodName: string, body: BodyInfo) {\r\n        const value = swaggerRoutes.find(qry => qry.className === className)\r\n        if (value == null) {\r\n            const worker = getNewWorker(methodName);\r\n            worker.body = body;\r\n            swaggerRoutes.push({\r\n                className: className,\r\n                workers: [worker]\r\n            })\r\n        }\r\n        else {\r\n            const savedWorker = value.workers.find(qry => qry.methodName === methodName);\r\n            if (savedWorker != null) {\r\n                savedWorker.body[body.variableName] = body.type;\r\n            }\r\n        }\r\n    }\r\n\r\n    static saveModel(model: SwaggerModelInfo) {\r\n        const value = swaggerModels.find(qry => qry.className === model.className);\r\n        if (value == null) {\r\n            swaggerModels.push(model);\r\n        }\r\n        else {\r\n            value.classInstance = model.classInstance;\r\n        }\r\n    }\r\n\r\n    static addIgnoreProperty(className: string, propertyName: string) {\r\n        const value = swaggerModels.find(qry => qry.className === className);\r\n        if (value == null) {\r\n            swaggerModels.push({\r\n                classInstance: null,\r\n                className: className,\r\n                ignoredProperty: [propertyName]\r\n            });\r\n        }\r\n        else {\r\n            value.ignoredProperty.push(propertyName);\r\n        }\r\n    }\r\n\r\n    static get routes() {\r\n        return swaggerRoutes;\r\n    }\r\n\r\n    static get models() {\r\n        return swaggerModels;\r\n    }\r\n}","export * from './models/index';\r\nexport * from './decorators/index';\r\nexport * from './enums/index'","export * from './swagger';","import { Router } from \"fortjs\";\r\nimport { Global } from \"../global\";\r\nimport { SwaggerHandler } from \"../handlers/swagger_handler\";\r\n\r\nexport class Swagger extends Router {\r\n    constructor() {\r\n        super();\r\n        Global.routes = this.routes;\r\n    }\r\n    async create() {\r\n        console.log(\"routes\", SwaggerHandler.routes);\r\n        console.log(\"models\", SwaggerHandler.models);\r\n    }\r\n}","module.exports = require(\"fortjs\");"],"sourceRoot":""}